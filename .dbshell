path
use BooksoreDb
kmlml
$ mongo
asd
> x = 200;
x / 5;
>x=200;
x-200;
x=200;
x/5
x/5
Math.sin(Math.PI/2)
new Date("20109/1/1");
"Hello, World!".replace("World","MongoDB");
"Hello, World!".replace("World","MongoDB")
function factorial(n){ if (n<=1) return 1; return n*factorial(n-1); }
factorial(5)
db
use video
db
db.movie
db.movies
movie={"title":"star wars: episode IV - a new hope", "director" : "george lucas", "year" : 1977}
db.movie
db.movies
db.movies.insertOne(movie)
db.movies.find().pretty()
db.movies.findOne()
db.movies.findOne(1)
db.movies.findOne(0)
db.movies.updateOne({title : "star wars : episode IV - a new hope"}, {$set : {reviews: []}})
db.movies.find().pretty()
-a
db.movies.updateOne({title : "star wars: episode IV - a new hope"}, {$set : {reviews: []}})
db.movies.find().pretty()
db.movies.deleteOne({title : "star wars: episode IV - a new hope"})
db.movies.find().pretty()
mongo some-host:30000/myDB
mongo some-host:3000/myDB
mongo some-host:30000/myDB
db.help()
mongo script1.js script2.js script3.js
$ mongo script1.js script2.js script3.js
mongo script1.js script2.js script3.js
mongo script1.jS
mongo script1.js
;
conn = new Mongo("some-host:3000")
conn = new Mongo("loaclhost:3000")
conn = new Mongo("host:3000")
db.movies.insertOne({"title" : "Stand by me"})
db.movies.drop()
db.movies.insertMany([{"title" : Ghostbusters"},])
db.movies.insertMany([{"title" : Ghostbusters"},{"title" : "E.T"},{"title" : "Blade Runner"}]);
db.movies.drop()
db.movies.insertMany([{"title" : Ghostbusters"},{"title" : "E.T"},{"title" : "Blade Runner"}]);
db.movies.find()
db.movies.insertMany([{"title" : "Ghostbusters"},{"title" : "E.T"},{"title" : "Blade Runner"}]);
db.movies.find()
db.movies.deleteOne({"title" : "E.T"})
db.movies.find()
db.movies.drop()
db.movies.find()
sa\
var joe=db.users.findOne({"name" : "joe"})
joe.relationships={"friends" : joe.friends, "enemies" : joe.enemies}
joe.relationships={"friends" : joe.friends, "enemies" : joe.enemies};
joe.relationships = {"friends" : joe.friends, "enemies" : joe.enemies};
var joe=db.users.findOne({"name" : "joe"})
joe.relationships = {"friends" : joe.friends, "enemies" : joe.enemies};
joe.username = joe.name
var joe=db.users.findOne({"name" : "joe"});
joe.relationships = {"friends" : joe.friends, "enemies" : joe.enemies};
joe.relationships = {"friends" : joe.friends};
joe.relationships = {"friends" : joe.friends};
;
joe
var joe = db.users.findOne({"name" : "joe"});
joe
joe.relationships = {"friends" : joe.friends};
joe.name
db.user.find()
db.user.findOut()
db.users.findOut()
db.users.find()
var joe = db.users.findOne({"name" : "joe})
var joe = db.users.findOne({"name" : joe})
db.users.find()
var joe = db.users.findOne({"name" : joe})
db.users.find()
db.users.insertOne({"name" : joe})
db.users.find()
db.users.insertOne({"name" : "joe"})
db.users.find()
db.users.deleteOne({"name" : null})
db.users.find()
joe.relationships = {"friends" = joe.friends, "enemies" : joe.enemies};
db.users.deleteOne({"name" : "joe"})
db.users.find()
var joe=db.users.findOne({"name" : "joe"})
joe.relationships = {"friends" : joe.friends, "enemies" : joe.enemies};
joe.username = joe.name
db.users.replaceOne({"name" : "joe"},joe)
db.users.insertMany([{"_id" : ObjectId("163413213"),"name" : "joe","friends" : 32,"enemies":2}])
db.users.insertMany([{"name" : "joe"},{"friends" : 32},{"enemies":2}])
db.users.find()
var joe=db.users.findOne({"name" : "joe})
var joe=db.users.findOne({"name" : "joe"})
joe.relationships={"friends" : joe.friends, "enemies" : joe.enemies}
db.user.find()
db.users.find()
db.users.findOne()
joe.username = joe.name
delete joe.friends
delete joe.enemies
delete joe.name
db.users.replaceOne({"name" : "joe"},joe)
db.users.fineOne()
db.users.find()
db.users.drop()
db.users.find()
db.people.insertOne({"name" : "joe", "title" : 123123, "age" : wda})
db.people.insertOne({"name" : "joe"})
db.people.insertOne({"name" : "joe", "title" : 123123})
;
db.people.find()
db.people.insertOne({"name" : "joe", "title" : 123123, "age" : wda})
db.people.insertOne({"name" : "joe", "title" : 123123, "age" : 16334})
db.people.find()
db.people.drop()
db.people.insertOne({"name" : "joe", "title" : 123123, "age" : 16334})
db.people.find()
db.analytics.insertMany({"url" : "www.example.com" , "pageviews" : 52})
db.analytics.find()
db.analytics.insertMany({"url" : "www.example.com"} , {"pageviews" : 52})
db.analytics.insertMany([{"url" : "www.example.com"} , {"pageviews" : 52}])
db.analytics.find()
db.analytics.drop()
db.analytics.insertMany([{"url" : "www.example.com" , "pageviews" : 52}])
db.analytics.find()
db.analytics.updateOne({"url" : "www.example.com"},)
db.analytics.updateOne({"url" : "www.example.com"},{"$inc" : {"pageviews" : 1}})
db.analytics.find()
db.analytics.drop()
db.users.insertMany([{"name" : "joe", "age" : 30, "sex" : "male", "location" : "wisconsin"}])
db.users.find()
db.users.findOne()
db.users.updateOne({})
db.users.updateOne({"_id" : ObjectId("60f78786b09abb5a7ac73998")},{"$set" : {"favorite book" : "War and Peace}})
db.users.updateOne({"_id" : ObjectId("60f78786b09abb5a7ac73998")},{"$set" : {"favorite book" : "War and Peace"}})
db.users.findOne()
db.users.updateOne({"name" : "joe"},{"$set" : {"favorite book" : "Green Eggs and Ham"}})
db.users.findOne()
db.users.updateOne({"name" : "joe"},{"$unset" : {"favorite book" : 1}})
db.users.findOne()
db.users.drop()
db.games.insertOne({"game" : "pinball", "user" : "joe"})
db.games.updateOne({"game" : "pinball", "user" : "joe"}, {"$inc" : {"score" : 50}})
db.games.findOne()
db.games.updateOne({"game" : "pinball", "user" : "joe"}, {"$inc" : {"score" : 10000}})
db.games.findOne()
db.blog.posts.insertMany({"title" : "A blog post", "content" : "..."})
db.blog.posts.insertMany({["title" : "A blog post", "content" : "..."]})
db.blog.posts.find()
db.blog.posts.insert({["title" : "A blog post", "content" : "..."]})
db.blog.posts.insert({"title" : "A blog post", "content" : "..."})
db.blog.posts.find()
db.blog.posts.findOne()
db.blog.posts.updateOne({"title" : "A blog post"},{"$push" : {}})
db.blog.posts.find()
db.blog.posts.updateOne({"title" : "A blog post"},{"$push" : {"comments" : "name" : "joe", "email" : "joe.example.com", "content" : "nice post. "}}})
db.blog.posts.updateOne({"title" : "A blog post"},{"$push" : {"comments" : "name" : "joe", "email" : "joe.example.com", "content" : "nice post. "}})
db.blog.posts.updateOne({"title" : "A blog post"},{"$push" : {"comments" : "name" : "joe", "email" : "joe.example.com", "content" : "nice post. "}}})
db.blog.posts.updateOne({"title" : "A blog post"},{"$push" : {"comments" : "name" : "joe", "email" : "joe.example.com", "content" : "nice post."}}})
db.blog.posts.updateOne({"title" : "A blog post"},{"$push" : {"comments" : {"name" : "joe", "email" : "joe.example.com", "content" : "nice post."}}})
db.blog.posts.findOne()
db.blog.posts.updateOne({"title" : "A blog post"},{"$push" : {"comments" : {"name" : "park", "email" : "park.example.com", "content" : "poop post."}}})
db.blog.posts.findOne()
db.stock.ticker.updateOne({"_id" : "GOOG"}, {"$push" : {"hourly" : {"$each" :[562.776, 562.790, 559.123]}}})
db.stock.ticker.findOne()
db.movies.find()
db.movies.updateOne({"genre" : "horror"}, {"$push" : {"top10" : {"each" ["Nightmare on Elm Street", "Saw"],"$slice" : -10}}})
db.movies.updateOne({"genre" : "horror"}, {"$push" : {"top10" : {"$each" ["Nightmare on Elm Street", "Saw"],"$slice" : -10}}})
db.papers.updateOne({"authors cited" : {"$ne" : "Richie"}},{$push : {"authors cited" : "Richie"}})
db.papers.findOne()
db.users.find()
db.blog.posts.findOne()
db.blog.posts.findOne()
db.users.insertOne({"username" : "joe", "emails" : ["joe@example.com", "joe@gmail.com", "joe@yahoo.com"]})
db.users.findOne()
db.users.updateOne({"_id" : ObjectId("60f7b46b6b6df486a3d83250")}, {"$addToSet" : "joe@gmail.com"}})
db.users.updateOne({"_id" : ObjectId("60f7b46b6b6df486a3d83250")}, {"$addToSet" : "joe@hotmail.com"}})
db.users.updateOne({"_id" : ObjectId("60f7b46b6b6df486a3d83250")}, {"$addToSet" : {"emails" : "joe@hotmail.com"}})
db.users.findOne()
db.users.updateOne({"_id" : ObjectId("60f7b46b6b6df486a3d83250")}, {"$addToSet" : {"emails" : {"$each" : ["joe.php.net", "joe.example.com", "joe.python.org"]}}})
db.users.findOne()
db.lists.find()
db.lists.insertOne({"todo" : ["dishes", "laundry", "dry cleaning"]})
db.lists.findOne()
db.list.updateOne({},{"$pull" : {"todo" : "laundry"}})
db.list.fineOne()
db.lists.fineOne()
db.lists.findOne()
db.lists.updateOne({},{"$pull" : {"todo" : "laundry"}})
db.lists.findOne()
db.blog.posts.findOne()
db.blog.posts.insertOne({"comments"} : {"votes" : 0})
db.blog.posts.updateOne({"_id" : ObjectId("660f7aa77b09abb5a7ac7399a")}, {"$addToSet" : {"comments" : {"$each" : ["votes" : 0]}}})
db.blog.posts.updateOne({"_id" : ObjectId("660f7aa77b09abb5a7ac7399a")}, {"$addToSet" : {"comments" : {"$each" : ["votes" : "0"]}}})
db.blog.posts.updateOne({"comments.name" : "joe"}, {"$addToSet" : {"votes" : {"$each" : [1,5,26]}}})
db.blog.posts.findOne()
db.blog.posts.updateOne({},{"$pull" : {"votes"}})
db.blog.posts.updateOne({},{"$pull" : {"votes" : 1}})
db.blog.posts.findOne()
db.blog.posts.deleteOne("votes")
db.blog.posts.findOne()
db.blog.posts.deleteOne({"votes"})
db.blog.posts.findOne()
db.blog.posts.updateOne({"$pop" : {"key" : 4}})
db.blog.posts.updateOne({"$pop" : {"key" : 3}})
db.blog.posts.updateOne({"$pop" : {"votes"}})
db.blog.findOne()
db.blog.find()
blog = db.analytics.findOne({url : "/blog"})
if(blog) { blog.pageviews++; db.analytics.save(blog); }
else { db.analytics.insertOne({url: "/blog", pageviews : 1}) }
db.analytics.updateOne({"url" : "/blog"},{"$inc" : {"pageviews" : 1}},{"upset" : true})
db.analytics.findOne()
db.users.updateOne({"req" : 25}, {"$inc" : {"rep" : 3}},{"upset" : true})
db.users.findOne()
db.userhttp.updateOne({"req" : 25}, {"$inc" : {"rep" : 3}},{"upset" : true})
db.userhttp.findOne()
db.userhttp.updateOne({"req" : 25}, {"$inc" : {"rep" : 3}},{"upsert" : true})
db.users.updateOne({"req" : 25}, {"$inc" : {"rep" : 3}},{"upsert" : true})
db.users.findOne()
db.userhttp.findOne()
db.users.updateOne({"rep" : 25}, {"$inc" : {"rep" : 3}},{"upsert" : true})
db.userhttp.findOne()
db.userhttp.drop()
db.users.updateOne({"rep" : 25}, {"$inc" : {"rep" : 3}},{"upsert" : true})
db.userhttp.findOne()
db.userhttp.updateOne({"rep" : 25}, {"$inc" : {"rep" : 3}},{"upsert" : true})
db.userhttp.findOne()
db.userhttp.updateOne({}, {"$setOnInsert" : {"createdAt" : new Date()}},{"upsert" : true})
db.userhttp.findOne()
db.userhttp.updateOne({}, {"$setOnInsert" : {"createdAt" : new Date()}},{"upsert" : true})
db.userhttp.findOne()
var x=db.testcol.findOne()
x.num=42
db.testcol.save(x)
x
var x = db.testcol.fineOne()
var x = db.testcol.findOne()
x
x=42
x
db.testcol.save(x)
var a = db.testcol.findOne()
a.num=42
a.num = 42;
a
x
x.num = 30;
x
x.num
db.testcol.save(x)
db.users.insertMany([])
db.users.insertMany([ {birthday : "10/13/1978"}, {birthday : "10/13/1978"}, {birthday : "10/13/1978"}])
db.users.updateMany({"birthday" : "10/13/1978"},{"$set" : {"gift" : "Happy BirthDay!"}})
db.users.findOne()
db.users.find()
db.users.find("age" : 27)
db.users.find({"age" : 27})
db.users.find({"rep" : 28})
db.users.find({"username" : 1, "email" : 1})
db.users.find({"username" : 1, "email" : })
db.users.find({"username" : 1, "email" : 1})
db.users.find({"username" : 1, "email" : 0})
db.users.find({"username" : 0, "email" : 0})
db.users.find({},{"username" : 0, "email" : 0})
db.users.find({},{"username" : 1, "email" : 1})
db.users.find({},{"username" : 1, "_id" : 0})
db.stock.find({"in_stock" : 0})
db.users.find({"username" : {"$ne" : "joe"}})
db.raffle.find({"ticket_no" : {"$in: [725,542,390]}})
db.users.find({"id_num" : {"$mod" : [5,1]}})
db.users.insertOne({"id_num" : [1,2,3,4,5,6,7,8,9,10,11,12]})
db.users.find({"id_num" : {"$mod" : [5,1]}})
db.users.find({"id_num" :{"$not" : {"$mod" : [5,1]}}})
db.num.insertMany({"id_num" : [1,2,3,4,5,6,7,8,9,10,11,12]})
db.num.insert({"id_num" : [1,2,3,4,5,6,7,8,9,10,11,12]})
db.num.find()
db.users.find({"id_num" : {"$mod" : [5,1]}})
db.num.findOne()
db.users.find({"id_num" :{"$not" : {"$mod" : [5,1]}}})
db.num.find({"id_num" :{"$not" : {"$mod" : [5,1]}}})
db.c.find()
db.food.findOne()
db.food.insertOne({"fruit" : ["apple", "banana", "peach"]})
db.food.insertOne()
db.food.fineOne()
db.food.insertOne({"fruit" : ["apple", "banana", "peach"]})
db.food.fine()
db.food.find()
db.food.drop()
db.food.insertOne({"fruit" : ["apple", "banana", "peach"]})
db.food.findOne()
db.food.insertOne({"fruit"} : {"aaaa"})
db.food.insertOne({"fruit" : "aaaa"})
db.food.findOne()
db.food.find()
db.food.deleteOne({"fruit" : "aaaa"})
db.food.find()
db.food.drop()
db.food.insertOne({"_id" :1, "fruit" : ["apple", "banana", "peach"]})
db.food.insertOne({"_id" :2, "fruit" : ["apple", "kumquat", "orange"]})
db.food.insertOne({"_id" :3, "fruit" : ["cherry", "banana", "apple"]})
db.food.find()
db.food.find({fruit : {$all : ["apple", "banana"]}})
db.food.find({"fruit" : ["apple","banana"]})
db.food.find({"fruit.2" : "peach"})
db.food.find({"fruit.2" : "banana"})
db.food.find({"fruit.1" : "banana"})
db.food.find({"fruit" : {"$size" : 3}})
db.food.update(criteria,{"$push" : {fruit" : "strawberry"}})
db.food.update(criteria,{"$push" : {"fruit" : "strawberry"}})
db.food.update(criteria, {"$push" : {"fruit" : "strawberry"},"$inc" : {"size" : 1}})
db.food.find({"size" : {"$gt" : 3}})
db.food.find({"size" : {"$gt" : 2}})
db.food.find({"size" : {"$gt" : 1}})
db.food.find({"$size" : {"$gt" : 1}})
db.food.find({"$size" : {"$gt" : 3}})
db.food.find({"$size" : {"$gt" : 2}})
db.food.find({"size" : {"$gt" : 2}})
db.food.find({"fruit" : {"$size" : 3}})
db.food.update(criteria, {"$push" : {"fruit" : "strawberry"},"$inc" : {"size" : 1}})
db.food.update('criteria', {"$push" : {"fruit" : "strawberry"},"$inc" : {"size" : 1}})
db.food.find()
db.food.update("criteria", {"$push" : {"fruit" : "strawberry"},"$inc" : {"size" : 1}})
db.food.update({"$push" : {"fruit" : "strawberry"},"$inc" : {"size" : 1}})
db.food.update({"fruit"}, {"$addToSet" : {"rkawk"}})
db.food.update("$addToSet" : {"fruit" : "rkawk"})
db.food.update($addToSet : {"fruit" : "rkawk"})
db.food.update({"fruit"}, {"$addToSet" : "rkawk"})
db.food.find()
db.food.update({"_id" : 1}, {"$addToSet" : "rkawk"})
db.food.find()
db.food.update({_id : 1}, {"$addToSet" : "rkawk"})
db.food.update({_id : 1}, {$addToSet : "rkawk"})
db.food.updateOne({"_id" : 1}, {"$addToSet" : "rkawk"})
db.food.updateOne({"_id" : 1}, {"$addToSet" : {"rkawk"}})
db.food.find()
db.food.updateOne({"_id" : 1}, {"$addToSet" : {"fruit" : "rkawk"}})
db.food.find()
db.blog.posts.find()
db.blog.posts.findOne()
db.blog.posts.findOne(criteria, {"comments" : {"$slice" : 5}})
db.blog.posts.findOne({"comments" : {"$slice" : 5}})
db.blog.posts.findOne({"comments" : {"$slice" : -1}})
db.blog.posts.findOne(criteria, {"comments" : {"$slice" : -1}})
db.blog.posts.find({"comments.name" : "joe"}, {"comments.$" : 1})
x
var x =20
x
y
{"a" : {"$gt" : 10, "$lt" : 20}}
public class criteria
public class Criteria
db.blog.find()
db.blog.posts.find()
db.blog.posts.findOne()
db.foo.find()
db.foo.insertOne({"apple" : 1, "banana" : 6, "peach" : 3})
db.foo.insertOne({"apple" : 8, "spinanh" : 4, "watermelon" : 4})
db.foo.find()
db.foo.find({"$where" : function(){ for(var current in this){ for (var other in this){ if(current != other && this[current] == this[other]) { return true; } } } return false; {{); }} );
db.foo.find({"$where" : function(){ for(var current in this){ for (var other in this){ if(current != other && this[current] == this[other]) { return true; } } } return false;  }} );
;
for(i=0;i<100;i++){ db.collection.insertOne({x : i}); }
var cursor = db.collection.find()
var cursor=db.people.find();
cursor.forEach(function(x){ print(x.name); });
db.people.find()
db.people.insertOne({"name" : "joeeeee", "title" : 12351233, "age" : 25})
db.people.find()
cursor.forEach(function(x){ print(x.name); });
var cursor=db.people.find()
cursor.forEach(function(x){ print(x.name); });
cursor
print(cursor)
print(x)
x
cursor
db.c.find()
db.people.find()
db.people.find().limit(1)
db.people.find().limit(2)
db.people.find().skip(1)
db.people.find().sort(age: -1)
db.people.find().sort({age : -1})
db.people.find().sort({age : 1})
db.stock.find()
db.foo.find()
var page1=db.foo.find(criteria).limit(100)
var page1=db.foo.find(criteia).limit(100)
var page1=db.foo.find(critetia).limit(100)
mongod
page1
var page1=db.foo.find().sort({"date" : -1}).limit(100)
latest
var latest=null
latest
while(page1.hasNext()){ latest=page1.next(); diplay(latest); }
db.people.find()
db.people.insertOne({"name" : "jim"})
db.people.find()
db.people.insertOne({"name" : "joe", "random" : Math.random()})
db.people.find()
db.people.pop()
db.people.deleteOne("name" : "joe", "random" : 0.3238749323852351)
db.people.deleteOne("name" : "joe")
db.people.deleteOne({"name" : "joe", "random" : 0.3238749323852351})
db.people.find()
db.people.updateOne({"name" : "joe"},{"$set" : {"random" : Math.random()}})
db.people.find()
db.people.updateOne({"name" : "joeeeee"},{"$set" : {"random" : Math.random()}})
db.people.updateOne({"name" : "jim"},{"$set" : {"random" : Math.random()}})
db.people.find()
var random=Math.random()
result=db.people.findOne({"random" : {"gt" : random}})
if(result==null){ result=db.people.findOne({"random" : {"$lte" : random}}) }
if(result==null){ result=db.people.findOne({"random" : {"$lte" : random}}) }
result
random
result
db.users.find({"username" : "user101"}).explain("executionStats")
db.users.createIndex({"username" : 1})
db.users.find({"username": "user101"}).explain("executionStats")
db.users.find({"username" : "user999999"}).explain("executionStats")
db.users.find().sort({"age" : 1,"username" : 1})
db.users.createIndex({"age" : 1, "username" : 1})
db.users.find({},{"_id" : 0,"i":0,"created":0})
db.students.createIndex({"class_id" : 1})
db.students.createIndex({student_id:1, class_id : 1})
db.blog.find()
db.blog.posts.find()
db.blog.posts.findOne()
db.blog.createIndex({"comments.date" : 1})
db.blog.find()
db.blog.createIndex({"comments.10.votes" : 1})
db.multi.find()
db.multi.insert({"x" : [1,2,3], "y" : 1})
db. multi.insert({"x" : 1, "y" : [4,5,6]})
db.multi.insert({"x" : [1,2,3], "y" : [4,5,6]})
db.users.find({"age" : 42}).explain('executionStats')
db.users.findOne()
db.users.find()
db.users.insert({firstname : "bob"})
db.users.find()
db.users.deleteOne("firstname" : "bob")
db.users.deleteOne(firstname : "bob")
db.users.deleteOne({firstname : "bob"})
db.users.find()
db.users.deleteOne({firstname : "bob"})
db.users.find()
db.users.createIndex({"firstname" : 1}, {"unique" : true, " partialFilterExpression" : {"firstname" : {$exists : true}}})
db.users.insert({"firstname" : "bob"})
db.users.insert({firstname : "bob"})
db.users.find()
db.users.remove({firstname : "bob"})
db.users.createIndex({"age" : 1}, {"unique" : true})
db.users.createIndex({"birthday" : 1}, {"unique" : true})
db.users.find()
db.foo.find()
db.openStreetMap.crateIndex({"loc" : "2dsphere"})
db.openStreetMap.createIndex({"loc" : "2dsphere"})
;
asc
mongoimport <path to neighborhoods.json> -c neighborhoods
mongoimport <path to neighborhoods.json> -c neighborhoods
mongoimport <path to restaurants.json> -c restaurants
mongo --version
mongoimport <path to restaurants.json> -c restaurants
mongoimport <path to restaurants.json> -c restaurants
mongoimport <path to restaurants.json> -c restaurants
mongoimport <path to restaurants.json> -c restaurants
mongoimport --version
mongoimport <path to restaurants.json> -c restaurants
;
mongoexport -h ds.133321.mlab.com:33321 -d funfun -c <collection> -u <user> -p <password> -o <output file> dkssud
port
Port
mongo port
mongo Port
mongoimport -d neighborhoods -c neighborhoods --file neighborhoods
mongoimport -d neighborhoods -c neighborhoods neighborhoods.json
mongoimport <path to neighborhoods.json> -c neighborhoods
db.users.find()
mongoexport -d users -c users -o myfile.json --port 27017
mongoexport -d users -c username -o myfile.json --port 27017
mongoexport -d username -c username -o myfile.json --port 27017
mongoexport -d users -c users -o myfile.json
mongoimport -c neighborhoods --file neighborhoods.json
$ mongoimport -c neighborhoods --file neighborhoods.json
mongoimport -c neighborhoods --file neighborhoods.json
$ mongoimport <path to neighborhoods.json> -c neighborhoods
mongoimport <path to neighborhoods.json> -c neighborhoods
var m1={name : "kim", age : 20}
var m2={name : "lee", age : 23};
var m3={name : "admin", age : 35};
v3
m3
db.member.find()
db.member.insert(m1)
db.member.insert([m2,m3])
db.member.find()
db.member.find({name : "kim"})
db.member.find({age : 20})
db.member.update({name : "kim"},{age : 22})
db.memeber.find()
db.member.find()
db.member.update({age : 22},{name : "kim", age : 21})
db.member.find()
db.member.update({name : "kim"},{"$set" : {age : 22}})
db.member.find()
cd cs
cd .. cd .. cd .. dsa
mongoimport --db test --collection restaurants --drop --file D:\mongodb\primer-dataset.json
mongoimport
mongoexport
mongoimport asasddsa
mongoimport asasd
mongoimport
mongoimport s
mongoimport --db test --collection restaurants --drop --file D:\mongodb\primer-dataset.json
mongoimport <path to neighborhoods.json> -c neighborhoods
mongoimport <neighborhoods.json> -c neighborhoods
mongoimport -c neighborhoods
scp
mongoimport -c neighborhoods
mongoimport <neighborhoods.json> -c neighborhoods
mongoimport --db=neighborhoods --file=neighborhoods.json
help
help connect
db.help
mongoimport --version
mongoimport --version
mongoimport
show dbs
use testdb
mongoimport --version
mongoimport --version
db.neighborhoods.find()
db.neighborhoods.find()
db.neighborhoods.find()
db.neighborhoods
use test
db.neighborhoods.find()
db.neighborhoods.insertOne({name : "daw"})
db.neighborhoods.find()
db.neighborhoods.deleteOne({"name" : "daw"})
db.restaurants.find()
restaurants
db.restaurants
use testdb
db.restaurants.find()
db.restaurants
db
show dbs
use restaurants
db.restaurants.find()
use neighborhoods
db.neighborhoods.find()
db.restaurants.find()
db
db.neighborhoods.find()
db show
db shows
show dbs
use neighborhoods
db.test.find()
use test
db.test.find()
db.neighborhoods.createIndex({location : "2dsphere"})
db.restaurants.createIndex({location : "2dsphere"})
db.neighborhoods.find({name : "Clinton"})
use neighborhoods
db.neighborhoods.find({name : "Clinton"})
db.neighborhoods.createIndex({location : "2dsphere"})
db.neighborhoods.find({name : "Clinton"})
use restaurants
db.restaurants.find({name : "Little Pie Company"})
db.restaurants.findOne({name : "Little Pie Company"})
use neighborhoods
db.neighborhoods.findOne({name : "Clinton"})
db.neighborhoods.findOne({geometry:{$geoIntersects:{$geometry:{tpye : "Point",coordinates:[-73.93414657,40.82302903]}}}})
db
db.neighborhood =db.neighborhoods.findOne({ geometry:{ $geoIntersects:{ $geometry:{ type:"Point", coordinates:[-73.93414657,40.82303903] } } } });
var neighborhood =db.neighborhoods.findOne({ geometry:{ $geoIntersects:{ $geometry:{ type:"Point", coordinates:[-73.93414657,40.82303903] } } } });
neighborhood
db.restaurants.find()
use restaurants
neighborhood
db.restaurants.find({ location : { $geoWithin : { $geometry : neighborhood.geometry } } }, {name : 1, _id : 0});
show dbs
use test
test
db.people.find()
use neighborhoods
db.people.find()
import
import test
cd .. import test
db show
sbow dbs
show dbs
use neighborhoods
db.hyrule.find({"tile" : {"$near" : [20,21]}})
db
use test
db.articles.createIndex({"title" : "text", "body" : "text"})
db.articles.createIndex({"title" : "text", "body" : "text"},{"weights" : {"title" : 3,"body" :2}})
db.articles.createIndex({"$**" : "text"})
db.articles.find({"text" : {"$search" : "impact crater lunar"}},{"title" : 1}).limit(10)
shows db
show dbs
use test,local
use neighborhoods,restaurants
db.neighborhoods.find()
db.restaurants.find()
use neighborhoods
db.neighborhoods.find()
it
db.restaurants.find()
use neighborhoods,restaurants
db.neighborhoods.find()
use {neighborhoods,restaurants}
db.neighborhoods.find()
use neighborhoods
help
db.help
show collections
show users
db.hello()
db.host()
db.serverstatus()
db.serverStatus()
db.hostInfo()
mongo --port 27017
rs
rs.help()
rs.status()
db.isMaster
db.isMaster()
st=ShardingTest({ name : "one-min-shards", chunkSize:1, shards:2, rs:{ nodes:3, oplogSize:10 }, other:{ enableBalancer:true } });
st=ShardingTest({ name : "one-min-shards", chunkSize:1, shards:2, rs:{ nodes:3, oplogSize:10 }, other:{ enableBalancer:true } });
mongo "mongodb+srv://cluster0.ahlcp.mongodb.net/myFirstDatabase" --username upwoong
c
mongo "mongodb+srv://cluster0.ahlcp.mongodb.net/myFirstDatabase" --username upwoong
node app.js
show dbs
show collections
db.testmodels.find()
db.himakes.find()
show collections
db.himakes.find()
show collections
db.himakings.find()
show collections
db.users.find()
db,users.drop()
db.users.drop()
db.users.find()
db.users.drop()
show collections
db.himakings.find()
db.himakings.drop()
db.users.find()
db.user.find()
db.users.find()
db.users.drop()
db.users.find()
db.waters.insert({name : "dawdaw", Date : "adwwad"})
db.waters.find()
show dbs
use ride_database
show collections
db.rides.find()
db.rides.drop()
db.rides.find()
db.users.find()
db.users.drop()
db.waters.find()\
db.waters.find()
db.waters.findOne({Date : req.body.Date})
db.users.find()
show dbs
db.waters.find()
db.water.find()
db.contents.insertOne({title: "danwj", description : "dawgsfd", author : "da})
db.contents.insertOne({title: "danwj", description : "dawgsfd", author : "da"})
db.contents.insertOne({title: "danwj", description : "wgsfd", author : "da"})
db.contents.insertOne({title: "danwj", description : "fd", author : "da"})
db.contents.find()
db.contents.drop()
db.waters.find()
db.waters.insertOne({name : "qqqqq", Date : "2017/07/24"})
db.waters.insertOne({name : "qkrckswhd", Date:Date()})
db.waters.find()
db.waters.insertOne({name : "dawadw" Date : new Date($create_time).toLocaleDateString()})
db.waters.insertOne({name : "dawadw" Date :new Date($create_time).toLocaleDateString()})
db.waters.insertOne({name : "qkrckswhd", Date:Date.today()})
db.waters.insertOne({name : "qkrckswhd", Date:Date()})
db.waters.find()
npm install
npm install moment
db.waters.insertOne({name : "qkrckswhd", Date:new Date()})
db.waters.find()
db.waters.insertOne({name : "qkrckswhd", Date:new Date("<YYYY-mm-dd>"")})
db.waters.insertOne({name : "qkrckswhd", Date:new Date("<YYYY-mm-dd>")})
db.waters.find()
db.waters.insertOne({name : "qkrckswhd", Date:new Date("<YYYY-mm-dd>")})
db.waters.find()
db.waters.drop()
db.waters.insertOne({name : "qkrckswhd", Date:"dawadwdwa"})
db.waters.find()
db.waters.insertOne({name : "dawdaw", Date :new Date($creation_time).toLocaleDateString()})
db.waters.insertOne({name : "dawdaw", Date :new Date(creation_time).toLocaleDateString()})
db.waters.insertOne({name : "dawdaw", Date :time.Time})
db.waters.insertOne({name : "dawdaw", Date :time.Time()})
db.waters.insertOne({name : "dawdaw", Date :time.Now()})
db.waters.find()
db.waters.drop()
db.waters.find()
db.waters.drop()
db.users.drop()
db.users.find()
db.waters.find()
db.users.find()
db.waters.find()
db.waters.drop()
db.users.drop()
db.waters.drop()
db.waters.find()
db.waters.drop()
db.waters.insertOne({name : "adw"})
db.users.find()
db.users.drop()
db.waters.drop()
db.users.find()
db.waters.find()
db.waters.drop()
db.users.drop()
db.waters.find()
db.waters.drop()
db.waters.find()
db.waters.drop()
db.waters.find()
db.waters.drop()
db.waters.find()
db.waters.find().sort(1)
db.waters.find().sort()
db.waters.find().sort({Date : 1})
db.waters.find().sort({Date : -1})
db.waters.drop()
db.waters.find()
db.waters.find()
db.users.find()
db.users.deleteOne({name : "upwoong"})
db.users.find()
db.users.deleteOne({name : "upwoong"})
db.users.find()
db.users.deleteOne({name : "upwoong"})
db.users.find()
db.users.find()\
db.users.find()
db.waters.find()
db.users.find()
db.waters.find()
db.users.find()
db.waters.find()
db.waters.deleteOne({name : "dq"})
db.waters.deleteOne({name : "qqq"})
Date()
Date().now()
Date().Now()
new Date()
Date()
new Date()
db.waters.find()
db.waters.insertOne({name : "qweasd",Date : new Date()})
db.waters.find()
db.waters.drop()
db.waters.insertOne({name : "qweasd",Date : new Date()})
db.waters.find()
NOW()
Now()
now()
new Date().ISODate('YYYY-MM-DD hh:mm:ss')
new Date().ISODate()
(new Date()).ISODate()
(new Date()).ISODate('YYYY-MM-DD hh:mm:ss')
var a =new Date().ISODate('YYYY-MM-DD hh:mm:ss')
var a =new Date()
a
a+1
a+2
time.Now()
time.now()
a
58384900350835084358094359498990835035038945984984984985489549854343
45
]]]
[ wq ]
;
a
db.waters.find()
db.waters.count()
for(int i=0; i<30; i++){ int a = 0; a++ }
i
int a =0;
int a=0
a=0
for(i=0 i<20 i ++)
show collections
db.openStreetMap.find()
db.openStreetMap.drop()
db.viedofiles.find()
show collections
db.videofiles.find()
db.videofiles.insertOne({name : "asd"})
db.videofiles.find()
db.videofiles.drop()
db.videofiles.find()
db.videofiles.insertOne({name : "daw"})
db.videofiles.find()
show collections
db.weathers.find()
db.weathers.drop()
db.weathers.find()
db.videofiles.find()
db.videofiles.count()
show collections
db.videofiles.find()
db.videofiles.deleteOne({"size" : 0})
db.videofiles.find()
db.waters.find()
db.users.find()
db.getCollection('users').find({"name" : "upwoong"})
db.getCollection('users').find({"name" : "upwoong"},{"password" : "ehdrhd12"})
db.getCollection('users').find({"name" : "upwoong"},{_id : 0,"password" : 1})
db.getCollection('users').find(,{_id : 0,"password" : 1})
db.getCollection('users').find({_id : 0,"password" : 1})
db.getCollection('users').find({"name" : "upwoong"},{_id : 0,"password" : 1})
db.users.find()
db.getCollection('users').find({"name" : "upwoong"},{_id : 0,"password" : 1})
db.getCollection('users').find({"name" : "tmddk5623"},{_id : 0,"password" : 1})
db.getCollection('users').find({"name" : ""},{_id : 0,"password" : 1})
db.getCollection('users').find({"name" : 1},{_id : 0,"password" : 1})
db.getCollection('users').find({"name" : 0},{_id : 0,"password" : 1})
db.getCollection('users').find({},{_id : 0,"password" : 1})
db.collection('videofiles;)
db.collection('videofiles')
db.getCollection('users').find({},{_id : 0,"password" : 1})
db.users.find()
show collections
db.imgfiles.find()
db.videofiles.find()
var 1 =hi
1
5
1="hi"
1
const 1 = "Hi"
hi="no"
hi
show collection
show collections
db.imagefiles.find()
db.imgfiles.find()
db.imgfiles.drop()
db.imgfiles.find()
db.videofiles.find()
db.videofiles.drop()
db.videofiles.find()
show collections
show collections
db.videofiles.find()
dsa
db.videofiles.find()
db.users.find()
db.videofiles.find()
db.users.find()
db.videofiles.find()
dsa
db.videofiles.find()
db.videofiles.drop()
db.videofiles.find()
db.waters.find()
db.waters.drop()
db.waters.find()
db.waters.drop()
db.users.find()
show collections
db.weathers.find()
db.weathers.drop()
db.weathers.find()
db.videofiles.find()
show collections
db.imgfiles.drop()
db.videofiles.find()
show collections
db.videofiles.find()
db.videofiles.find()\
db.videofiles.find()
db.videofiles.count()
db.waters.find()
ㅇㅁㄴ
db.waters.deleteOne({name : "ㅗㅑ"})
db.waters.find()
db.waters.find()
db.waters.delete({name : ""})
db.waters.deleteOne({name : ""})
db.waters.deleteMany({name : ""})
db.waters.find()
db.waters.deleteOne({Date : "2021. 9. 2})
db.waters.deleteOne({Date : "2021. 9. 2:})
db.waters.deleteOne({Date : "2021. 9. 2"})
db.waters.deleteMany({Date : "2021. 9. 2"})
db.waters.deleteOne({Date : ""})
db.waters.drop()
db.waters.insertOne({name : "awdawd"})
;
db.waters.find()
db.waters.find({})
it
ji
hi
int i=1
i=1
i+213523
26-15
#fe552
fffsdd
show dbs
show collections
db.imgfiles.find()
show collections
db.imgfiles.find()
db.videofile.find()
shwo collection
show collection
show collections
db.videofiles.find()
db.videofiles.find(0)
db.videofiles.find({0})
db.videofiles.find(0)
db.videofiles.find(1)
db.videofiles.findOne(1)
db.videofiles.findOne()
db.videofiles.findOne(3)
db.videofiles.findOne({3})
db.videofiles.find()
db.videofiles.find().pretty()
db.imgfiles.find()
db.weaters.find()
show collections
db.weathers.find()
login
db.users.find()
db.weaters.find()
db.weathers.find()
db.videofiles.find()
db.imgfiles.find()
db.videofiles.deleteOne()
db.videofiles.deleteOne({})
db.imgfiles.deleteOne()
db.imagefiles.deleteOne()
db.imgfiles.find()
db.imgfiles.find()
db.videofiles.find()
db.imgfiles.deleteOne({})
db.imgfiles.find()
db.imgfiles.find()
db.imagefiles.find()
show collections
db.imgfiles.find()
db.people.find()
db.waters.find()
show collectipns
show collections
show collections
db.waters.find()
db.weathers.find()
